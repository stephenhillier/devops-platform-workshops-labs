#!/usr/bin/env groovy

//ENV Vars
def TOOLS_NAMESPACE = "s4g19x-stephenhillier-openshift201-may2019-tools"
def DEV_NAMESPACE = "s4g19x-stephenhillier-openshift201-may2019-dev"
def PROD_NAMESPACE = "s4g19x-stephenhillier-openshift201-may2019-prod"
def LOKI_SERVICE = "loki"

//Pipeline
node {
    stage ('Deploy Loki to dev'){
        dir ('simple_pipeline') {
            checkout scm
            sh "oc process -f templates/loki_template.yaml -p  LOKI_SERVICE_NAME=${LOKI_SERVICE} | oc apply -f - -n ${DEV_NAMESPACE}"
            timeout (time: 180, unit: 'SECONDS'){
                openshift.withCluster() {
                    openshift.withProject("${DEV_NAMESPACE}") {
                        def dc = openshift.selector('deployment', "${LOKI_SERVICE}")
                        dc.rollout().status()
                    }
                }
            }
        }
    }
    stage ('Wait for input'){
        dir ('simple_pipeline') {
            input "Deploy Loki to prod?"
        }
    }
    stage ('Deploy Loki to Dev'){
        dir ('simple_pipeline') {
            checkout scm
            sh "oc process -f templates/loki_template.yaml -p  LOKI_SERVICE_NAME=${LOKI_SERVICE} | oc apply -f - -n ${PROD_NAMESPACE}"
            timeout (time: 180, unit: 'SECONDS'){
                openshift.withCluster() {
                    openshift.withProject("${PROD_NAMESPACE}") {
                        def dc = openshift.selector('deployment', "${LOKI_SERVICE}")
                        dc.rollout().status()
                    }
                }
            }
        }
    }
}
